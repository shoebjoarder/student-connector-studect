services:
  nginx:
    image: nginx:1-alpine
    restart: unless-stopped
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./frontend/build:/data/www
    ports:
      - 80:80
      - 443:443
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  node-backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=4000
      - SESSION_SECRET=some_secret_key
      - MONGO_URL=mongodb://root:example@mongo:27017
      - DB_NAME=awt_project
      - REDIS_URL=redis:6379
    command: npm run start
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo:4
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data

volumes:
  mongo-data:
  redis-data:
